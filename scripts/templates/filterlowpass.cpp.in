#include "{{ filter_name.lower() }}lowpass.h"

/*
 * This file is autogenerated. Please do not modify directly as changes may be
 * overwritten.
 */

namespace {
    // {{ filter_name }} lowpass filter
    // order: {{ order }}
    // cutoff freq: {{ cutoff_freq }}
    // sample freq: {{ sample_freq }}
    const double a[] = { {{ a }} };
    const double b[] = { {{ b }} };
} // namespace

{{ filter_name }}Lowpass::{{ filter_name }}Lowpass(): _x{0.0f}, _y{0.0f}, _n{0} { }

float {{ filter_name }}Lowpass::filter(float sample) {
    _x[_n] = sample;
    _y[_n] = b[0]*_x[_n];
    for (int i = 1; i < _size; ++i) {
        _y[_n] += b[i]*_x[(_n - i + _size) % _size]
            - a[i]*_y[(_n - i + _size) % _size];
    }

    float result = _y[_n];
    _n = (_n + 1) % _size;
    return result;
}
